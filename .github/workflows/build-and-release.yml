name: Build and Release

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Run tests
      run: |
        npm run test:ci
        
    - name: Build API package
      run: |
        cd packages/api
        npm run build
        
    - name: Build Mobile package
      run: |
        cd packages/mobile
        npm run build
        
    - name: Build Admin package
      run: |
        cd packages/admin
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          packages/*/dist/
          packages/*/build/
          
  docker-build:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./packages/api
        push: true
        tags: |
          minimodules/api:latest
          minimodules/api:${{ github.sha }}
          
    - name: Build and push Admin image
      uses: docker/build-push-action@v5
      with:
        context: ./packages/admin
        push: true
        tags: |
          minimodules/admin:latest
          minimodules/admin:${{ github.sha }}
          
  release:
    runs-on: ubuntu-latest
    needs: [build, docker-build]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          packages/*/dist/**
          packages/*/build/**
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
